
<%- include("../partials/users/header.ejs") %>
<div class="flex min-h-screen bg-gray-50">
  <%- include("../partials/users/sidebar.ejs") %>

  <div class="flex-1 overflow-hidden">
    <main class="p-6">
      <div class="max-w-7xl mx-auto">
        <div class="bg-white rounded-lg shadow-sm overflow-hidden animate-fadeIn">
          <div class="px-6 py-4 border-b border-gray-200">
            <h1 class="text-2xl font-semibold text-gray-800">My Orders</h1>
          </div>
          
          <% if (orders && orders.length > 0) { %>
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Invoice</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  <% orders.forEach(function(order) { %>
                    <tr class="hover:bg-gray-50 transition-colors duration-150">
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">#<%= order._id %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= new Date(order.date).toLocaleDateString() %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">₹<%= (order.finalAmount ).toFixed(2) %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <% if (order.paymentMethod === 'Online Payment' && order.paymentStatus === 'pending') { %>
                          <button onclick="retryPayment('<%= order.razorpayOrderId %>')" class="bg-indigo-600 text-white px-3 py-1.5 rounded text-sm hover:bg-indigo-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Retry
                          </button>
                        <% } else { %>
                          <a href="/orderStatus/<%= order._id %>" class="bg-indigo-600 text-white px-3 py-1.5 rounded text-sm hover:bg-indigo-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            View
                          </a>
                        <% } %>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <% let invoiceShown = false; %>
                        <% order.orderedItem.forEach(item => { %>
                          <% if (item.orderStatus === 'Delivered' && !invoiceShown) { %>
                            <a href="/downloadInvoice/<%= order._id %>" class="bg-black text-white px-3 py-1.5 rounded text-sm hover:bg-gray-800 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black">
                              Download
                            </a>
                            <% invoiceShown = true; %>
                          <% } %>
                        <% }) %>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
            
            <% if (totalPages > 1) { %>
              <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
                <div class="flex justify-center space-x-2">
                  <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>" class="inline-flex items-center px-3 py-1.5 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      ← Previous
                    </a>
                  <% } %>
                  
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>" class="inline-flex items-center px-3 py-1.5 border rounded-md text-sm font-medium <%= currentPage === i ? 'bg-indigo-600 text-white border-indigo-600' : 'text-gray-700 border-gray-300 bg-white hover:bg-gray-50' %> focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      <%= i %>
                    </a>
                  <% } %>
                  
                  <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>" class="inline-flex items-center px-3 py-1.5 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Next →
                    </a>
                  <% } %>
                </div>
              </div>
            <% } %>
            
          <% } else { %>
            <div class="py-12 flex flex-col items-center justify-center">
              <div class="w-64 h-64">
                <dotlottie-player
                  src="https://lottie.host/a6fb943e-451f-4f46-b81b-b6ce2931b74b/AX1k9uGBeH.lottie"
                  background="transparent"
                  speed="1"
                  loop
                  autoplay
                ></dotlottie-player>
              </div>
              <p class="mt-4 text-gray-500 text-lg">You haven't placed any orders yet</p>
              <a href="/shop" class="mt-4 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                Go to Shop
              </a>
            </div>
          <% } %>
        </div>
      </div>
    </main>
  </div>
</div>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fadeIn {
    animation: fadeIn 0.5s ease-out forwards;
  }
</style>

<script
  src="https://unpkg.com/@dotlottie/player-component@2.7.12/dist/dotlottie-player.mjs"
  type="module"
></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  async function retryPayment(orderId) {
    console.log("Retrying payment for Order ID:", orderId);
    try {
      const response = await fetch("/retry-payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ razorpayOrderId: orderId }),
      });

      const data = await response.json();
      console.log("Server Response:", orderId);

      if (data.success) {
        initiateRazorpayPayment(data.razorpayOrderId, data.amount, data.apiKey);
      } else {
        Swal.fire({
          icon: "error",
          title: "Payment Failed",
          text: data.error || "Failed to save payment failure details!",
        });
      }
    } catch (error) {
      console.error("Error in retryPayment:", error);
      Swal.fire({
          icon: "error",
          title: "Payment Failed",
          text: error.message || "Failed to save payment failure details!",
        });
    }
  }

  function initiateRazorpayPayment(orderId, amount,apiKey) {
    const options = {
      key: apiKey,
      amount: amount * 100,
      currency: "INR",
      name: "EcoBuy",
      description: "Purchase Payment",
      order_id: orderId,
      handler: function (response) {
        fetch("/paymentSucess", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              window.location.href = "/orders";
            } else {
              Swal.fire(data.error,"Error", "Payment verification failed", "error");
              window.location.href = "/order";
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            Swal.fire(
              "Error",
              "Payment verification failed. Please try again.",
              "error"
            );
          });
      },
      prefill: {
        name: "<%= user?.name %>",
        email: "<%= user?.email %>",
      },
      theme: {
        color: "#2962ff",
      },
    };

    const rzp = new Razorpay(options);
    rzp.open();
  }
</script>
<%- include("../partials/users/footer.ejs") %>
