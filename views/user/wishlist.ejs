<%- include("../partials/users/header.ejs") %>

<body class="bg-[rgb(244,246,247)]">
  <div class="max-w-screen-xl mx-auto px-4 py-12">
    <h1 class="text-3xl font-bold text-center mb-6 text-gray-900">My Wishlist</h1>
    
    <div class="bg-white rounded-lg shadow-md p-6">
      <% if (wishlist && wishlist.length > 0) { %>
        <div class="grid grid-cols-1 gap-6">
          <% wishlist.forEach(item => { %>
            <div class="flex flex-col sm:flex-row border-b border-gray-200 pb-6 mb-6 last:border-0 last:pb-0 last:mb-0">
              <!-- Product Image -->
              <div class="w-full sm:w-32 h-32 mb-4 sm:mb-0 flex-shrink-0">
                <a href="/productDetails?id=<%= item.product._id %>">
                  <img 
                    src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                    alt="<%= item.product.productName %>" 
                    class="w-full h-full object-cover rounded-md"
                  />
                </a>
              </div>
              
              <!-- Product Info -->
              <div class="flex-grow px-0 sm:px-6 flex flex-col justify-between">
                <div>
                  <h2 class="text-lg font-semibold text-gray-800 mb-1">
                    <%= item.product.productName %>
                  </h2>
                  <p class="text-sm text-gray-600 mb-2">Color: <%= item.product.color %></p>
                  <div class="flex items-center gap-2 mb-3">
                    <p class="text-base text-gray-500 line-through font-medium">
                      ₹<%= item.product.regularPrice.toLocaleString('en-IN') %>
                    </p>
                    <p class="text-lg font-bold text-red-600">
                      ₹<%= item.product.salePrice.toLocaleString('en-IN') %>
                    </p>
                    <span class="text-sm text-green-600 font-medium">
                      <%= Math.round((1 - item.product.salePrice / item.product.regularPrice) * 100) %>% off
                    </span>
                  </div>
                </div>
                
                <!-- Action Buttons -->
                <div class="flex flex-col sm:flex-row gap-3 mt-2">
                  <button 
                    class="removeFromWishlistBtn bg-white border border-gray-300 text-gray-700 py-2 px-4 rounded-md text-sm font-medium hover:bg-gray-50 transition duration-300"
                    data-product-id="<%= item.product._id %>"
                  >
                    <i class="far fa-trash-alt mr-2"></i>Remove
                  </button>
                  
                  <% if (item.isInCart) { %>
                    <a 
                      href="/cart" 
                      class="bg-green-500 text-white py-2 px-4 rounded-md text-sm font-medium hover:bg-green-600 transition duration-300 text-center"
                    >
                      Go to Cart
                    </a>
                  <% } else { %>
                    <button 
                      class="addToCartBtn bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-2 px-4 rounded-md text-sm font-medium hover:opacity-90 transition duration-300"
                      data-product-id="<%= item.product._id %>"
                    >
                      <i class="fas fa-shopping-cart mr-2"></i>Add to Cart
                    </button>
                  <% } %>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      <% } else { %>
        <div class="text-center py-12">
          <i class="far fa-heart text-5xl text-gray-300 mb-4"></i>
          <h2 class="text-xl font-medium text-gray-700 mb-2">Your wishlist is empty</h2>
          <p class="text-gray-500 mb-6">Save items you like by clicking the heart icon on product pages</p>
          <a href="/" class="inline-block bg-blue-600 text-white py-2 px-6 rounded-md text-sm font-medium hover:bg-blue-700 transition duration-300">
            Continue Shopping
          </a>
        </div>
      <% } %>
    </div>
  </div>
</body>

<%- include('../partials/users/footer.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
 document.body.addEventListener("click", function(event) {
    if (event.target.closest(".addToCartBtn")) {
        let productId = event.target.closest(".addToCartBtn").getAttribute("data-product-id");

        fetch("/addToCartFromWishlist", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId: productId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: "Success!",
                    text: data.message || "Product added to cart successfully.",
                    icon: "success",
                    timer: 1500,
                    showConfirmButton: false
                });
            } else {
                Swal.fire({
                    toast:true,
                    position:'top-end',
                    text: data.message || "Failed to add product to cart.",
                    icon: "warning",
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        })
        .catch(error => {
            console.error("Error:", error);
            Swal.fire({
                title: "Error!",
                text: "An error occurred. Please try again.",
                icon: "error"
            });
        });
    }
});


    
    // Remove from Wishlist Functionality
    document.querySelectorAll(".removeFromWishlistBtn").forEach(button => {
      button.addEventListener("click", function() {
        let productId = this.getAttribute("data-product-id");
        
        Swal.fire({
          title: "Are you sure?",
          text: "Do you want to remove this item from your wishlist?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, remove it!"
        }).then((result) => {
          if (result.isConfirmed) {
            fetch("/removeFromWishlist", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({ productId: productId })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire({
                  title: "Removed!",
                  text: "Item has been removed from your wishlist.",
                  icon: "success",
                  timer: 1500,
                  showConfirmButton: false
                }).then(() => {
                  location.reload(); // Reload to update UI
                });
              } else {
                Swal.fire({
                  title: "Error!",
                  text: data.message || "Failed to remove from wishlist.",
                  icon: "error"
                });
              }
            })
            .catch(error => {
              console.error("Error:", error);
              Swal.fire({
                title: "Error!",
                text: "An error occurred. Please try again.",
                icon: "error"
              });
            });
          }
        });
      });
    });
  
</script>